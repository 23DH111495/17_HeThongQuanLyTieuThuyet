// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final ImageView btnClearSearch;

  @NonNull
  public final ImageView btnMore;

  @NonNull
  public final ImageView btnSearch;

  @NonNull
  public final ImageView btnSearchBack;

  @NonNull
  public final ChipGroup categoryChips;

  @NonNull
  public final HorizontalScrollView categoryTabsContainer;

  @NonNull
  public final Chip chipAction;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final Chip chipFantasy;

  @NonNull
  public final Chip chipRomance;

  @NonNull
  public final Chip chipSciFi;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final ImageView ivAppLogo;

  @NonNull
  public final CardView searchBarCard;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull BottomNavigationView bottomNavigation,
      @NonNull ImageView btnClearSearch, @NonNull ImageView btnMore, @NonNull ImageView btnSearch,
      @NonNull ImageView btnSearchBack, @NonNull ChipGroup categoryChips,
      @NonNull HorizontalScrollView categoryTabsContainer, @NonNull Chip chipAction,
      @NonNull Chip chipAll, @NonNull Chip chipFantasy, @NonNull Chip chipRomance,
      @NonNull Chip chipSciFi, @NonNull EditText etSearch, @NonNull FrameLayout fragmentContainer,
      @NonNull ImageView ivAppLogo, @NonNull CardView searchBarCard, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bottomNavigation = bottomNavigation;
    this.btnClearSearch = btnClearSearch;
    this.btnMore = btnMore;
    this.btnSearch = btnSearch;
    this.btnSearchBack = btnSearchBack;
    this.categoryChips = categoryChips;
    this.categoryTabsContainer = categoryTabsContainer;
    this.chipAction = chipAction;
    this.chipAll = chipAll;
    this.chipFantasy = chipFantasy;
    this.chipRomance = chipRomance;
    this.chipSciFi = chipSciFi;
    this.etSearch = etSearch;
    this.fragmentContainer = fragmentContainer;
    this.ivAppLogo = ivAppLogo;
    this.searchBarCard = searchBarCard;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btnClearSearch;
      ImageView btnClearSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnClearSearch == null) {
        break missingId;
      }

      id = R.id.btnMore;
      ImageView btnMore = ViewBindings.findChildViewById(rootView, id);
      if (btnMore == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      ImageView btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.btnSearchBack;
      ImageView btnSearchBack = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchBack == null) {
        break missingId;
      }

      id = R.id.categoryChips;
      ChipGroup categoryChips = ViewBindings.findChildViewById(rootView, id);
      if (categoryChips == null) {
        break missingId;
      }

      id = R.id.categoryTabsContainer;
      HorizontalScrollView categoryTabsContainer = ViewBindings.findChildViewById(rootView, id);
      if (categoryTabsContainer == null) {
        break missingId;
      }

      id = R.id.chipAction;
      Chip chipAction = ViewBindings.findChildViewById(rootView, id);
      if (chipAction == null) {
        break missingId;
      }

      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipFantasy;
      Chip chipFantasy = ViewBindings.findChildViewById(rootView, id);
      if (chipFantasy == null) {
        break missingId;
      }

      id = R.id.chipRomance;
      Chip chipRomance = ViewBindings.findChildViewById(rootView, id);
      if (chipRomance == null) {
        break missingId;
      }

      id = R.id.chipSciFi;
      Chip chipSciFi = ViewBindings.findChildViewById(rootView, id);
      if (chipSciFi == null) {
        break missingId;
      }

      id = R.id.etSearch;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.ivAppLogo;
      ImageView ivAppLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivAppLogo == null) {
        break missingId;
      }

      id = R.id.searchBarCard;
      CardView searchBarCard = ViewBindings.findChildViewById(rootView, id);
      if (searchBarCard == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, appBarLayout, bottomNavigation,
          btnClearSearch, btnMore, btnSearch, btnSearchBack, categoryChips, categoryTabsContainer,
          chipAction, chipAll, chipFantasy, chipRomance, chipSciFi, etSearch, fragmentContainer,
          ivAppLogo, searchBarCard, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
