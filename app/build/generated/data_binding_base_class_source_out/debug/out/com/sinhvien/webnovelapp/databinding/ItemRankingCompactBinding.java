// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRankingCompactBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final TextView tvAuthor;

  @NonNull
  public final TextView tvGenres;

  @NonNull
  public final TextView tvRank;

  @NonNull
  public final TextView tvRating;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvViews;

  private ItemRankingCompactBinding(@NonNull CardView rootView, @NonNull ImageView ivCover,
      @NonNull TextView tvAuthor, @NonNull TextView tvGenres, @NonNull TextView tvRank,
      @NonNull TextView tvRating, @NonNull TextView tvTitle, @NonNull TextView tvViews) {
    this.rootView = rootView;
    this.ivCover = ivCover;
    this.tvAuthor = tvAuthor;
    this.tvGenres = tvGenres;
    this.tvRank = tvRank;
    this.tvRating = tvRating;
    this.tvTitle = tvTitle;
    this.tvViews = tvViews;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRankingCompactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRankingCompactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_ranking_compact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRankingCompactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCover;
      ImageView ivCover = ViewBindings.findChildViewById(rootView, id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.tvAuthor;
      TextView tvAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthor == null) {
        break missingId;
      }

      id = R.id.tvGenres;
      TextView tvGenres = ViewBindings.findChildViewById(rootView, id);
      if (tvGenres == null) {
        break missingId;
      }

      id = R.id.tvRank;
      TextView tvRank = ViewBindings.findChildViewById(rootView, id);
      if (tvRank == null) {
        break missingId;
      }

      id = R.id.tvRating;
      TextView tvRating = ViewBindings.findChildViewById(rootView, id);
      if (tvRating == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvViews;
      TextView tvViews = ViewBindings.findChildViewById(rootView, id);
      if (tvViews == null) {
        break missingId;
      }

      return new ItemRankingCompactBinding((CardView) rootView, ivCover, tvAuthor, tvGenres, tvRank,
          tvRating, tvTitle, tvViews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
