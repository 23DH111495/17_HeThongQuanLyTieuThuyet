// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChapterReaderBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnChaptersList;

  @NonNull
  public final Button btnNextChapter;

  @NonNull
  public final Button btnPrevChapter;

  @NonNull
  public final ImageButton btnScrollDownToolbar;

  @NonNull
  public final ImageButton btnScrollUpToolbar;

  @NonNull
  public final Button btnSettings;

  @NonNull
  public final ImageButton btnTtsPlayPause;

  @NonNull
  public final ImageButton btnTtsSettings;

  @NonNull
  public final ImageButton btnTtsStop;

  @NonNull
  public final ImageButton btnTtsToggle;

  @NonNull
  public final Button btnUnlock;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final CardView layoutLocked;

  @NonNull
  public final LinearLayout navigationButtons;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final Spinner spinnerTtsSpeed;

  @NonNull
  public final Spinner spinnerTtsVoice;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final LinearLayout ttsControlBar;

  @NonNull
  public final TextView tvAccessInfo;

  @NonNull
  public final TextView tvChapterContent;

  @NonNull
  public final TextView tvChapterInfo;

  @NonNull
  public final TextView tvChapterTitle;

  @NonNull
  public final TextView tvNovelTitle;

  @NonNull
  public final TextView tvPreviewContent;

  @NonNull
  public final TextView tvUnlockPrice;

  private ActivityChapterReaderBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btnChaptersList, @NonNull Button btnNextChapter,
      @NonNull Button btnPrevChapter, @NonNull ImageButton btnScrollDownToolbar,
      @NonNull ImageButton btnScrollUpToolbar, @NonNull Button btnSettings,
      @NonNull ImageButton btnTtsPlayPause, @NonNull ImageButton btnTtsSettings,
      @NonNull ImageButton btnTtsStop, @NonNull ImageButton btnTtsToggle, @NonNull Button btnUnlock,
      @NonNull LinearLayout contentLayout, @NonNull CardView layoutLocked,
      @NonNull LinearLayout navigationButtons, @NonNull ProgressBar progressBar,
      @NonNull NestedScrollView scrollView, @NonNull Spinner spinnerTtsSpeed,
      @NonNull Spinner spinnerTtsVoice, @NonNull Toolbar toolbar,
      @NonNull LinearLayout ttsControlBar, @NonNull TextView tvAccessInfo,
      @NonNull TextView tvChapterContent, @NonNull TextView tvChapterInfo,
      @NonNull TextView tvChapterTitle, @NonNull TextView tvNovelTitle,
      @NonNull TextView tvPreviewContent, @NonNull TextView tvUnlockPrice) {
    this.rootView = rootView;
    this.btnChaptersList = btnChaptersList;
    this.btnNextChapter = btnNextChapter;
    this.btnPrevChapter = btnPrevChapter;
    this.btnScrollDownToolbar = btnScrollDownToolbar;
    this.btnScrollUpToolbar = btnScrollUpToolbar;
    this.btnSettings = btnSettings;
    this.btnTtsPlayPause = btnTtsPlayPause;
    this.btnTtsSettings = btnTtsSettings;
    this.btnTtsStop = btnTtsStop;
    this.btnTtsToggle = btnTtsToggle;
    this.btnUnlock = btnUnlock;
    this.contentLayout = contentLayout;
    this.layoutLocked = layoutLocked;
    this.navigationButtons = navigationButtons;
    this.progressBar = progressBar;
    this.scrollView = scrollView;
    this.spinnerTtsSpeed = spinnerTtsSpeed;
    this.spinnerTtsVoice = spinnerTtsVoice;
    this.toolbar = toolbar;
    this.ttsControlBar = ttsControlBar;
    this.tvAccessInfo = tvAccessInfo;
    this.tvChapterContent = tvChapterContent;
    this.tvChapterInfo = tvChapterInfo;
    this.tvChapterTitle = tvChapterTitle;
    this.tvNovelTitle = tvNovelTitle;
    this.tvPreviewContent = tvPreviewContent;
    this.tvUnlockPrice = tvUnlockPrice;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChapterReaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChapterReaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chapter_reader, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChapterReaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChaptersList;
      Button btnChaptersList = ViewBindings.findChildViewById(rootView, id);
      if (btnChaptersList == null) {
        break missingId;
      }

      id = R.id.btnNextChapter;
      Button btnNextChapter = ViewBindings.findChildViewById(rootView, id);
      if (btnNextChapter == null) {
        break missingId;
      }

      id = R.id.btnPrevChapter;
      Button btnPrevChapter = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevChapter == null) {
        break missingId;
      }

      id = R.id.btnScrollDownToolbar;
      ImageButton btnScrollDownToolbar = ViewBindings.findChildViewById(rootView, id);
      if (btnScrollDownToolbar == null) {
        break missingId;
      }

      id = R.id.btnScrollUpToolbar;
      ImageButton btnScrollUpToolbar = ViewBindings.findChildViewById(rootView, id);
      if (btnScrollUpToolbar == null) {
        break missingId;
      }

      id = R.id.btnSettings;
      Button btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.btnTtsPlayPause;
      ImageButton btnTtsPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (btnTtsPlayPause == null) {
        break missingId;
      }

      id = R.id.btnTtsSettings;
      ImageButton btnTtsSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnTtsSettings == null) {
        break missingId;
      }

      id = R.id.btnTtsStop;
      ImageButton btnTtsStop = ViewBindings.findChildViewById(rootView, id);
      if (btnTtsStop == null) {
        break missingId;
      }

      id = R.id.btnTtsToggle;
      ImageButton btnTtsToggle = ViewBindings.findChildViewById(rootView, id);
      if (btnTtsToggle == null) {
        break missingId;
      }

      id = R.id.btnUnlock;
      Button btnUnlock = ViewBindings.findChildViewById(rootView, id);
      if (btnUnlock == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.layoutLocked;
      CardView layoutLocked = ViewBindings.findChildViewById(rootView, id);
      if (layoutLocked == null) {
        break missingId;
      }

      id = R.id.navigationButtons;
      LinearLayout navigationButtons = ViewBindings.findChildViewById(rootView, id);
      if (navigationButtons == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.spinnerTtsSpeed;
      Spinner spinnerTtsSpeed = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTtsSpeed == null) {
        break missingId;
      }

      id = R.id.spinnerTtsVoice;
      Spinner spinnerTtsVoice = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTtsVoice == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.ttsControlBar;
      LinearLayout ttsControlBar = ViewBindings.findChildViewById(rootView, id);
      if (ttsControlBar == null) {
        break missingId;
      }

      id = R.id.tvAccessInfo;
      TextView tvAccessInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvAccessInfo == null) {
        break missingId;
      }

      id = R.id.tvChapterContent;
      TextView tvChapterContent = ViewBindings.findChildViewById(rootView, id);
      if (tvChapterContent == null) {
        break missingId;
      }

      id = R.id.tvChapterInfo;
      TextView tvChapterInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvChapterInfo == null) {
        break missingId;
      }

      id = R.id.tvChapterTitle;
      TextView tvChapterTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChapterTitle == null) {
        break missingId;
      }

      id = R.id.tvNovelTitle;
      TextView tvNovelTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelTitle == null) {
        break missingId;
      }

      id = R.id.tvPreviewContent;
      TextView tvPreviewContent = ViewBindings.findChildViewById(rootView, id);
      if (tvPreviewContent == null) {
        break missingId;
      }

      id = R.id.tvUnlockPrice;
      TextView tvUnlockPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvUnlockPrice == null) {
        break missingId;
      }

      return new ActivityChapterReaderBinding((CoordinatorLayout) rootView, btnChaptersList,
          btnNextChapter, btnPrevChapter, btnScrollDownToolbar, btnScrollUpToolbar, btnSettings,
          btnTtsPlayPause, btnTtsSettings, btnTtsStop, btnTtsToggle, btnUnlock, contentLayout,
          layoutLocked, navigationButtons, progressBar, scrollView, spinnerTtsSpeed,
          spinnerTtsVoice, toolbar, ttsControlBar, tvAccessInfo, tvChapterContent, tvChapterInfo,
          tvChapterTitle, tvNovelTitle, tvPreviewContent, tvUnlockPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
