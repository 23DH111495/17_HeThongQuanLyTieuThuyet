// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWeeklyFeaturedNetflixBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton btnAddLibraryNetflix;

  @NonNull
  public final Button btnReadNetflix;

  @NonNull
  public final ImageView ivCoverNetflix;

  @NonNull
  public final LinearLayout llRankBadgeNetflix;

  @NonNull
  public final TextView tvAuthorNetflix;

  @NonNull
  public final TextView tvChaptersNetflix;

  @NonNull
  public final TextView tvDescriptionNetflix;

  @NonNull
  public final TextView tvGenreNetflix;

  @NonNull
  public final TextView tvRankNetflix;

  @NonNull
  public final TextView tvRatingNetflix;

  @NonNull
  public final TextView tvStatusNetflix;

  @NonNull
  public final TextView tvTitleNetflix;

  private ItemWeeklyFeaturedNetflixBinding(@NonNull CardView rootView,
      @NonNull ImageButton btnAddLibraryNetflix, @NonNull Button btnReadNetflix,
      @NonNull ImageView ivCoverNetflix, @NonNull LinearLayout llRankBadgeNetflix,
      @NonNull TextView tvAuthorNetflix, @NonNull TextView tvChaptersNetflix,
      @NonNull TextView tvDescriptionNetflix, @NonNull TextView tvGenreNetflix,
      @NonNull TextView tvRankNetflix, @NonNull TextView tvRatingNetflix,
      @NonNull TextView tvStatusNetflix, @NonNull TextView tvTitleNetflix) {
    this.rootView = rootView;
    this.btnAddLibraryNetflix = btnAddLibraryNetflix;
    this.btnReadNetflix = btnReadNetflix;
    this.ivCoverNetflix = ivCoverNetflix;
    this.llRankBadgeNetflix = llRankBadgeNetflix;
    this.tvAuthorNetflix = tvAuthorNetflix;
    this.tvChaptersNetflix = tvChaptersNetflix;
    this.tvDescriptionNetflix = tvDescriptionNetflix;
    this.tvGenreNetflix = tvGenreNetflix;
    this.tvRankNetflix = tvRankNetflix;
    this.tvRatingNetflix = tvRatingNetflix;
    this.tvStatusNetflix = tvStatusNetflix;
    this.tvTitleNetflix = tvTitleNetflix;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWeeklyFeaturedNetflixBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWeeklyFeaturedNetflixBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_weekly_featured_netflix, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWeeklyFeaturedNetflixBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddLibraryNetflix;
      ImageButton btnAddLibraryNetflix = ViewBindings.findChildViewById(rootView, id);
      if (btnAddLibraryNetflix == null) {
        break missingId;
      }

      id = R.id.btnReadNetflix;
      Button btnReadNetflix = ViewBindings.findChildViewById(rootView, id);
      if (btnReadNetflix == null) {
        break missingId;
      }

      id = R.id.ivCoverNetflix;
      ImageView ivCoverNetflix = ViewBindings.findChildViewById(rootView, id);
      if (ivCoverNetflix == null) {
        break missingId;
      }

      id = R.id.llRankBadgeNetflix;
      LinearLayout llRankBadgeNetflix = ViewBindings.findChildViewById(rootView, id);
      if (llRankBadgeNetflix == null) {
        break missingId;
      }

      id = R.id.tvAuthorNetflix;
      TextView tvAuthorNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthorNetflix == null) {
        break missingId;
      }

      id = R.id.tvChaptersNetflix;
      TextView tvChaptersNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvChaptersNetflix == null) {
        break missingId;
      }

      id = R.id.tvDescriptionNetflix;
      TextView tvDescriptionNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvDescriptionNetflix == null) {
        break missingId;
      }

      id = R.id.tvGenreNetflix;
      TextView tvGenreNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvGenreNetflix == null) {
        break missingId;
      }

      id = R.id.tvRankNetflix;
      TextView tvRankNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvRankNetflix == null) {
        break missingId;
      }

      id = R.id.tvRatingNetflix;
      TextView tvRatingNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvRatingNetflix == null) {
        break missingId;
      }

      id = R.id.tvStatusNetflix;
      TextView tvStatusNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusNetflix == null) {
        break missingId;
      }

      id = R.id.tvTitleNetflix;
      TextView tvTitleNetflix = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleNetflix == null) {
        break missingId;
      }

      return new ItemWeeklyFeaturedNetflixBinding((CardView) rootView, btnAddLibraryNetflix,
          btnReadNetflix, ivCoverNetflix, llRankBadgeNetflix, tvAuthorNetflix, tvChaptersNetflix,
          tvDescriptionNetflix, tvGenreNetflix, tvRankNetflix, tvRatingNetflix, tvStatusNetflix,
          tvTitleNetflix);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
