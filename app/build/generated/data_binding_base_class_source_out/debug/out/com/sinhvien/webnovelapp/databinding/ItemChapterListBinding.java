// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemChapterListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvChapterNumber;

  @NonNull
  public final TextView tvChapterStatus;

  @NonNull
  public final TextView tvChapterTitle;

  private ItemChapterListBinding(@NonNull LinearLayout rootView, @NonNull TextView tvChapterNumber,
      @NonNull TextView tvChapterStatus, @NonNull TextView tvChapterTitle) {
    this.rootView = rootView;
    this.tvChapterNumber = tvChapterNumber;
    this.tvChapterStatus = tvChapterStatus;
    this.tvChapterTitle = tvChapterTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemChapterListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemChapterListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_chapter_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemChapterListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvChapterNumber;
      TextView tvChapterNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvChapterNumber == null) {
        break missingId;
      }

      id = R.id.tvChapterStatus;
      TextView tvChapterStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvChapterStatus == null) {
        break missingId;
      }

      id = R.id.tvChapterTitle;
      TextView tvChapterTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvChapterTitle == null) {
        break missingId;
      }

      return new ItemChapterListBinding((LinearLayout) rootView, tvChapterNumber, tvChapterStatus,
          tvChapterTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
