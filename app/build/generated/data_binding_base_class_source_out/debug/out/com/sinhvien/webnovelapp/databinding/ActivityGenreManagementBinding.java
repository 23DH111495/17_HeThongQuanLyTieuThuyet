// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGenreManagementBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnClearResults;

  @NonNull
  public final Button btnLoadActiveOnly;

  @NonNull
  public final Button btnLoadAllGenres;

  @NonNull
  public final Button btnNextPage;

  @NonNull
  public final Button btnPrevPage;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final LinearLayout paginationControls;

  @NonNull
  public final RecyclerView rvGenres;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final TextView tvPageInfo;

  @NonNull
  public final TextView tvStatus;

  private ActivityGenreManagementBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnClearResults, @NonNull Button btnLoadActiveOnly,
      @NonNull Button btnLoadAllGenres, @NonNull Button btnNextPage, @NonNull Button btnPrevPage,
      @NonNull Button btnSearch, @NonNull EditText etSearch,
      @NonNull LinearLayout paginationControls, @NonNull RecyclerView rvGenres,
      @NonNull Toolbar toolbar, @NonNull TextView tvCount, @NonNull TextView tvPageInfo,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.btnClearResults = btnClearResults;
    this.btnLoadActiveOnly = btnLoadActiveOnly;
    this.btnLoadAllGenres = btnLoadAllGenres;
    this.btnNextPage = btnNextPage;
    this.btnPrevPage = btnPrevPage;
    this.btnSearch = btnSearch;
    this.etSearch = etSearch;
    this.paginationControls = paginationControls;
    this.rvGenres = rvGenres;
    this.toolbar = toolbar;
    this.tvCount = tvCount;
    this.tvPageInfo = tvPageInfo;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGenreManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGenreManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_genre_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGenreManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClearResults;
      Button btnClearResults = ViewBindings.findChildViewById(rootView, id);
      if (btnClearResults == null) {
        break missingId;
      }

      id = R.id.btnLoadActiveOnly;
      Button btnLoadActiveOnly = ViewBindings.findChildViewById(rootView, id);
      if (btnLoadActiveOnly == null) {
        break missingId;
      }

      id = R.id.btnLoadAllGenres;
      Button btnLoadAllGenres = ViewBindings.findChildViewById(rootView, id);
      if (btnLoadAllGenres == null) {
        break missingId;
      }

      id = R.id.btnNextPage;
      Button btnNextPage = ViewBindings.findChildViewById(rootView, id);
      if (btnNextPage == null) {
        break missingId;
      }

      id = R.id.btnPrevPage;
      Button btnPrevPage = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevPage == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.etSearch;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.paginationControls;
      LinearLayout paginationControls = ViewBindings.findChildViewById(rootView, id);
      if (paginationControls == null) {
        break missingId;
      }

      id = R.id.rvGenres;
      RecyclerView rvGenres = ViewBindings.findChildViewById(rootView, id);
      if (rvGenres == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvCount;
      TextView tvCount = ViewBindings.findChildViewById(rootView, id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tvPageInfo;
      TextView tvPageInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvPageInfo == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ActivityGenreManagementBinding((LinearLayout) rootView, btnClearResults,
          btnLoadActiveOnly, btnLoadAllGenres, btnNextPage, btnPrevPage, btnSearch, etSearch,
          paginationControls, rvGenres, toolbar, tvCount, tvPageInfo, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
