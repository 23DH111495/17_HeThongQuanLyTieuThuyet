// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNovelDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnSeeMore;

  @NonNull
  public final Button btnViewAllChapters;

  @NonNull
  public final ChipGroup chipGroupTags;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final FloatingActionButton fabBookmark;

  @NonNull
  public final LinearLayout genresContainer;

  @NonNull
  public final ImageView ivNovelCover;

  @NonNull
  public final ImageView ivNovelCoverLarge;

  @NonNull
  public final RecyclerView rvRecentChapters;

  @NonNull
  public final View synopsisGradient;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvNovelAuthor;

  @NonNull
  public final TextView tvNovelRating;

  @NonNull
  public final TextView tvNovelStats;

  @NonNull
  public final TextView tvNovelStatus;

  @NonNull
  public final TextView tvNovelSynopsis;

  @NonNull
  public final TextView tvNovelTitle;

  @NonNull
  public final TextView tvNovelViews;

  private ActivityNovelDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button btnSeeMore,
      @NonNull Button btnViewAllChapters, @NonNull ChipGroup chipGroupTags,
      @NonNull CollapsingToolbarLayout collapsingToolbar, @NonNull FloatingActionButton fabBookmark,
      @NonNull LinearLayout genresContainer, @NonNull ImageView ivNovelCover,
      @NonNull ImageView ivNovelCoverLarge, @NonNull RecyclerView rvRecentChapters,
      @NonNull View synopsisGradient, @NonNull Toolbar toolbar, @NonNull TextView tvNovelAuthor,
      @NonNull TextView tvNovelRating, @NonNull TextView tvNovelStats,
      @NonNull TextView tvNovelStatus, @NonNull TextView tvNovelSynopsis,
      @NonNull TextView tvNovelTitle, @NonNull TextView tvNovelViews) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnSeeMore = btnSeeMore;
    this.btnViewAllChapters = btnViewAllChapters;
    this.chipGroupTags = chipGroupTags;
    this.collapsingToolbar = collapsingToolbar;
    this.fabBookmark = fabBookmark;
    this.genresContainer = genresContainer;
    this.ivNovelCover = ivNovelCover;
    this.ivNovelCoverLarge = ivNovelCoverLarge;
    this.rvRecentChapters = rvRecentChapters;
    this.synopsisGradient = synopsisGradient;
    this.toolbar = toolbar;
    this.tvNovelAuthor = tvNovelAuthor;
    this.tvNovelRating = tvNovelRating;
    this.tvNovelStats = tvNovelStats;
    this.tvNovelStatus = tvNovelStatus;
    this.tvNovelSynopsis = tvNovelSynopsis;
    this.tvNovelTitle = tvNovelTitle;
    this.tvNovelViews = tvNovelViews;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNovelDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNovelDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_novel_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNovelDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnSeeMore;
      Button btnSeeMore = ViewBindings.findChildViewById(rootView, id);
      if (btnSeeMore == null) {
        break missingId;
      }

      id = R.id.btnViewAllChapters;
      Button btnViewAllChapters = ViewBindings.findChildViewById(rootView, id);
      if (btnViewAllChapters == null) {
        break missingId;
      }

      id = R.id.chipGroupTags;
      ChipGroup chipGroupTags = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupTags == null) {
        break missingId;
      }

      id = R.id.collapsingToolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.fabBookmark;
      FloatingActionButton fabBookmark = ViewBindings.findChildViewById(rootView, id);
      if (fabBookmark == null) {
        break missingId;
      }

      id = R.id.genresContainer;
      LinearLayout genresContainer = ViewBindings.findChildViewById(rootView, id);
      if (genresContainer == null) {
        break missingId;
      }

      id = R.id.ivNovelCover;
      ImageView ivNovelCover = ViewBindings.findChildViewById(rootView, id);
      if (ivNovelCover == null) {
        break missingId;
      }

      id = R.id.ivNovelCoverLarge;
      ImageView ivNovelCoverLarge = ViewBindings.findChildViewById(rootView, id);
      if (ivNovelCoverLarge == null) {
        break missingId;
      }

      id = R.id.rvRecentChapters;
      RecyclerView rvRecentChapters = ViewBindings.findChildViewById(rootView, id);
      if (rvRecentChapters == null) {
        break missingId;
      }

      id = R.id.synopsisGradient;
      View synopsisGradient = ViewBindings.findChildViewById(rootView, id);
      if (synopsisGradient == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvNovelAuthor;
      TextView tvNovelAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelAuthor == null) {
        break missingId;
      }

      id = R.id.tvNovelRating;
      TextView tvNovelRating = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelRating == null) {
        break missingId;
      }

      id = R.id.tvNovelStats;
      TextView tvNovelStats = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelStats == null) {
        break missingId;
      }

      id = R.id.tvNovelStatus;
      TextView tvNovelStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelStatus == null) {
        break missingId;
      }

      id = R.id.tvNovelSynopsis;
      TextView tvNovelSynopsis = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelSynopsis == null) {
        break missingId;
      }

      id = R.id.tvNovelTitle;
      TextView tvNovelTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelTitle == null) {
        break missingId;
      }

      id = R.id.tvNovelViews;
      TextView tvNovelViews = ViewBindings.findChildViewById(rootView, id);
      if (tvNovelViews == null) {
        break missingId;
      }

      return new ActivityNovelDetailBinding((CoordinatorLayout) rootView, appBarLayout, btnSeeMore,
          btnViewAllChapters, chipGroupTags, collapsingToolbar, fabBookmark, genresContainer,
          ivNovelCover, ivNovelCoverLarge, rvRecentChapters, synopsisGradient, toolbar,
          tvNovelAuthor, tvNovelRating, tvNovelStats, tvNovelStatus, tvNovelSynopsis, tvNovelTitle,
          tvNovelViews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
