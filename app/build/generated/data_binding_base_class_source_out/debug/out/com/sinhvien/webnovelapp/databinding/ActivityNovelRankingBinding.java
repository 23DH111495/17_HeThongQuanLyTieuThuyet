// Generated by view binder compiler. Do not edit!
package com.sinhvien.webnovelapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.tabs.TabLayout;
import com.sinhvien.webnovelapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNovelRankingBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnNextPage;

  @NonNull
  public final Button btnPrevPage;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final Chip chipDaily;

  @NonNull
  public final ChipGroup chipGroupPeriod;

  @NonNull
  public final Chip chipMonthly;

  @NonNull
  public final Chip chipWeekly;

  @NonNull
  public final Chip chipYearly;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final ImageView ivRankingHero;

  @NonNull
  public final LinearLayout paginationControls;

  @NonNull
  public final ItemPodiumRankFirstBinding podiumRank1;

  @NonNull
  public final ItemPodiumRankBinding podiumRank2;

  @NonNull
  public final ItemPodiumRankBinding podiumRank3;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvRanking;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final LinearLayout topPodiumSection;

  @NonNull
  public final TextView tvAvgRating;

  @NonNull
  public final TextView tvPageInfo;

  @NonNull
  public final TextView tvTotalNovels;

  @NonNull
  public final TextView tvTotalViews;

  private ActivityNovelRankingBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button btnNextPage, @NonNull Button btnPrevPage,
      @NonNull Chip chipAll, @NonNull Chip chipDaily, @NonNull ChipGroup chipGroupPeriod,
      @NonNull Chip chipMonthly, @NonNull Chip chipWeekly, @NonNull Chip chipYearly,
      @NonNull CollapsingToolbarLayout collapsingToolbar, @NonNull ImageView ivRankingHero,
      @NonNull LinearLayout paginationControls, @NonNull ItemPodiumRankFirstBinding podiumRank1,
      @NonNull ItemPodiumRankBinding podiumRank2, @NonNull ItemPodiumRankBinding podiumRank3,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView rvRanking,
      @NonNull TabLayout tabLayout, @NonNull Toolbar toolbar,
      @NonNull LinearLayout topPodiumSection, @NonNull TextView tvAvgRating,
      @NonNull TextView tvPageInfo, @NonNull TextView tvTotalNovels,
      @NonNull TextView tvTotalViews) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnNextPage = btnNextPage;
    this.btnPrevPage = btnPrevPage;
    this.chipAll = chipAll;
    this.chipDaily = chipDaily;
    this.chipGroupPeriod = chipGroupPeriod;
    this.chipMonthly = chipMonthly;
    this.chipWeekly = chipWeekly;
    this.chipYearly = chipYearly;
    this.collapsingToolbar = collapsingToolbar;
    this.ivRankingHero = ivRankingHero;
    this.paginationControls = paginationControls;
    this.podiumRank1 = podiumRank1;
    this.podiumRank2 = podiumRank2;
    this.podiumRank3 = podiumRank3;
    this.progressBar = progressBar;
    this.rvRanking = rvRanking;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
    this.topPodiumSection = topPodiumSection;
    this.tvAvgRating = tvAvgRating;
    this.tvPageInfo = tvPageInfo;
    this.tvTotalNovels = tvTotalNovels;
    this.tvTotalViews = tvTotalViews;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNovelRankingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNovelRankingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_novel_ranking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNovelRankingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnNextPage;
      Button btnNextPage = ViewBindings.findChildViewById(rootView, id);
      if (btnNextPage == null) {
        break missingId;
      }

      id = R.id.btnPrevPage;
      Button btnPrevPage = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevPage == null) {
        break missingId;
      }

      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipDaily;
      Chip chipDaily = ViewBindings.findChildViewById(rootView, id);
      if (chipDaily == null) {
        break missingId;
      }

      id = R.id.chipGroupPeriod;
      ChipGroup chipGroupPeriod = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupPeriod == null) {
        break missingId;
      }

      id = R.id.chipMonthly;
      Chip chipMonthly = ViewBindings.findChildViewById(rootView, id);
      if (chipMonthly == null) {
        break missingId;
      }

      id = R.id.chipWeekly;
      Chip chipWeekly = ViewBindings.findChildViewById(rootView, id);
      if (chipWeekly == null) {
        break missingId;
      }

      id = R.id.chipYearly;
      Chip chipYearly = ViewBindings.findChildViewById(rootView, id);
      if (chipYearly == null) {
        break missingId;
      }

      id = R.id.collapsingToolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.ivRankingHero;
      ImageView ivRankingHero = ViewBindings.findChildViewById(rootView, id);
      if (ivRankingHero == null) {
        break missingId;
      }

      id = R.id.paginationControls;
      LinearLayout paginationControls = ViewBindings.findChildViewById(rootView, id);
      if (paginationControls == null) {
        break missingId;
      }

      id = R.id.podiumRank1;
      View podiumRank1 = ViewBindings.findChildViewById(rootView, id);
      if (podiumRank1 == null) {
        break missingId;
      }
      ItemPodiumRankFirstBinding binding_podiumRank1 = ItemPodiumRankFirstBinding.bind(podiumRank1);

      id = R.id.podiumRank2;
      View podiumRank2 = ViewBindings.findChildViewById(rootView, id);
      if (podiumRank2 == null) {
        break missingId;
      }
      ItemPodiumRankBinding binding_podiumRank2 = ItemPodiumRankBinding.bind(podiumRank2);

      id = R.id.podiumRank3;
      View podiumRank3 = ViewBindings.findChildViewById(rootView, id);
      if (podiumRank3 == null) {
        break missingId;
      }
      ItemPodiumRankBinding binding_podiumRank3 = ItemPodiumRankBinding.bind(podiumRank3);

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rvRanking;
      RecyclerView rvRanking = ViewBindings.findChildViewById(rootView, id);
      if (rvRanking == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.topPodiumSection;
      LinearLayout topPodiumSection = ViewBindings.findChildViewById(rootView, id);
      if (topPodiumSection == null) {
        break missingId;
      }

      id = R.id.tvAvgRating;
      TextView tvAvgRating = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgRating == null) {
        break missingId;
      }

      id = R.id.tvPageInfo;
      TextView tvPageInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvPageInfo == null) {
        break missingId;
      }

      id = R.id.tvTotalNovels;
      TextView tvTotalNovels = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalNovels == null) {
        break missingId;
      }

      id = R.id.tvTotalViews;
      TextView tvTotalViews = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalViews == null) {
        break missingId;
      }

      return new ActivityNovelRankingBinding((CoordinatorLayout) rootView, appBarLayout,
          btnNextPage, btnPrevPage, chipAll, chipDaily, chipGroupPeriod, chipMonthly, chipWeekly,
          chipYearly, collapsingToolbar, ivRankingHero, paginationControls, binding_podiumRank1,
          binding_podiumRank2, binding_podiumRank3, progressBar, rvRanking, tabLayout, toolbar,
          topPodiumSection, tvAvgRating, tvPageInfo, tvTotalNovels, tvTotalViews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
