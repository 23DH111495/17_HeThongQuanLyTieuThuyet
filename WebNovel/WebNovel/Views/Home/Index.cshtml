@{
    Layout = "~/Views/Shared/_NovelReaderLayout.cshtml";
    var weeklyFeaturedNovels = ViewBag.WeeklyFeaturedNovels as List<WebNovel.Models.Novel>;
    var newlyReleasedNovels = ViewBag.NewlyReleasedNovels as List<WebNovel.Models.Novel>;
    var allNovels = ViewBag.AllNovels as List<WebNovel.Models.Novel> ?? new List<WebNovel.Models.Novel>();

    var popularGenres = ViewBag.PopularGenres as List<WebNovel.Models.Genre>;
    var defaultGenreNovels = ViewBag.DefaultGenreNovels as List<WebNovel.Models.Novel>;
    var defaultGenre = ViewBag.DefaultGenre as WebNovel.Models.Genre;
}

@*Change here Khanng -19/10/2025 *@

@model List<WebNovel.Models.Novel>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DarkNovel - Web Novel Platform</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="~/Css_Script/Home/index_css/Index.css" rel="stylesheet" />
    <link href="~/Css_Script/Home/index_css/newly_release_section.css" rel="stylesheet" />
    <link href="~/Css_Script/Home/index_css/ranking_section.css" rel="stylesheet" />
    <link href="~/Css_Script/Home/index_css/popular_genre_section.css" rel="stylesheet" />
    <link href="~/Css_Script/Home/index_css/Index_weekly_featured.css" rel="stylesheet" />
    <link href="~/Css_Script/Home/Recycle/scroll_bar.css" rel="stylesheet" />


    <style>
        /* Ranking section links */
        .ranking-item-link {
            text-decoration: none;
            color: inherit;
            display: block;
        }

            .ranking-item-link:hover .ranking-item {
                transform: translateX(4px);
                transition: transform 0.2s ease;
            }

        /* Genre section links */
        .genres-novel-card-link {
            text-decoration: none;
            color: inherit;
            display: block;
        }
    </style>

    <link href="~/Css_Script/Share_Layout/Header.css" rel="stylesheet" />
</head>
<body>
    <!-- Main Content -->
    <main class="main-container main-content">
        <!-- Hero Section with Slider -->
        <section class="hero-section">
            <div class="hero-content">
                <!-- Main Slider -->
                <div class="main-slider-container">
                    <div id="novel-slider">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var novel in Model)
                            {
                                <div class="novel-slide" data-novel-id="@novel.Id">
                                    @if (novel.HasCoverImage)
                                    {
                                        <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="novel-cover-link">
                                            <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                 alt="@novel.Title Cover"
                                                 onerror="this.src='~/Content/images/no-cover-placeholder.jpg'"
                                                 class="clickable-cover">
                                        </a>
                                    }
                                    else
                                    {
                                        <img src="~/Content/images/no-cover-placeholder.jpg" alt="@novel.Title Cover">
                                    }
                                    <div class="slide-overlay">
                                        <h2 class="slide-title">@novel.Title</h2>
                                        <p class="slide-description">
                                            @if (!string.IsNullOrEmpty(novel.Synopsis))
                                            {
                                                @(novel.Synopsis.Length > 150 ? novel.Synopsis.Substring(0, 150) + "..." : novel.Synopsis)
                                            }
                                            else
                                            {
                                                <text>No description available...</text>
                                            }
                                        </p>
                                        <div class="slide-meta">
                                            @if (novel.NovelGenres != null && novel.NovelGenres.Any())
                                            {
                                                var firstGenre = novel.NovelGenres.First().Genre;
                                                <span class="slide-genre-tag" style="@(firstGenre.ColorCode != null ? $"background-color: {firstGenre.ColorCode};" : "")">
                                                    @firstGenre.Name
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="slide-genre-tag">General</span>
                                            }

                                            @if (novel.AverageRating > 0)
                                            {
                                                <span class="slide-meta-item">
                                                    <i class="fas fa-star slide-star-icon"></i>
                                                    @novel.AverageRating.ToString("F1")
                                                </span>
                                            }

                                            @if (novel.TotalChapters > 0)
                                            {
                                                <span class="slide-meta-item">
                                                    <i class="fas fa-book-open"></i>
                                                    @novel.TotalChapters Chapters
                                                </span>
                                            }

                                            @if (novel.Author != null)
                                            {
                                                <span class="slide-meta-item">
                                                    <i class="fas fa-user"></i>
                                                    @novel.Author.PenName
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }

                            for (int i = Model.Count; i < 10; i++)
                            {
                                <div class="novel-slide empty-slide">
                                    <div class="empty-slide-content">
                                        <i class="fas fa-book-reader empty-slide-icon"></i>
                                        <h3 class="empty-slide-title">Slot Available</h3>
                                        <p class="empty-slide-text">Waiting for featured novel</p>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < 10; i++)
                            {
                                <div class="novel-slide empty-slide">
                                    <div class="empty-slide-content">
                                        <i class="fas fa-book-reader empty-slide-icon"></i>
                                        <h3 class="empty-slide-title">Slot @(i + 1)</h3>
                                        <p class="empty-slide-text">No featured novels yet</p>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <!-- Slider Controls -->
                    <button id="prev-slide" class="slider-control-btn">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="next-slide" class="slider-control-btn">
                        <i class="fas fa-chevron-right"></i>
                    </button>

                    <!-- Slider Indicators -->
                    <div class="slider-indicators-container">
                        @for (int i = 0; i < 10; i++)
                        {
                            <button class="slider-indicator-btn @(i == 0 ? "active" : "")" data-slide="@i"></button>
                        }
                    </div>

                    @*if (Model != null && Model.Count > 1) { }*@
                </div>

                <!-- Ad Banner -->
                <div class="ad-banner-section">
                    <div class="ad-banner ad-banner-tall">
                        <!-- Background with overlay in one div -->
                        <div class="ad-background"
                             style="background-image: linear-gradient(rgba(17, 24, 39, 0.8), rgba(55, 65, 81, 0.6)), url('../../Css_Script/Home/Index_img/Banner_img/Banner_1.jpg');">
                        </div>

                        <div class="ad-content ad-border-primary">
                            <h3 class="ad-title ad-title-primary">Premium Membership</h3>
                            <p class="ad-description">Unlock all novels, ad-free reading, and early access to new chapters!</p>
                            <button class="ad-button">
                                Subscribe Now
                            </button>
                        </div>
                    </div>

                    <div class="ad-banner ad-banner-short">
                        <div class="ad-background"
                             style="background-image: linear-gradient(rgba(17, 24, 39, 0.8), rgba(55, 65, 81, 0.6)), url('../../Css_Script/Home/Index_img/Banner_img/Banner_2.jpg');">
                        </div>
                        <div class="ad-content ad-border-amber">
                            <h3 class="ad-title ad-title-amber">New Releases</h3>
                            <p class="ad-description">Discover bestselling novels and exclusive author interviews</p>
                            <button class="ad-button ad-button-amber">
                                Explore Now
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Weekly Featured Section -->
        <section class="section mb-12">
            <div class="novel-feature-section">
                <h2 class="novel-feature-section__title">
                    <i class="fas fa-calendar-week nvs-section-icon"></i>
                    Weekly Featured
                </h2>
                <div class="novel-feature-section__list">
                    @if (weeklyFeaturedNovels != null && weeklyFeaturedNovels.Any())
                    {
                        @* Display actual novels *@
                        foreach (var novel in weeklyFeaturedNovels)
                        {
                            <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="novel-card__link">
                                <div class="novel-card">
                                    <div class="novel-card__image-container">
                                        @if (novel.HasCoverImage)
                                        {
                                            <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                 alt="@novel.Title" class="novel-card__image" />
                                        }
                                        else
                                        {
                                            <div class="novel-card__image-placeholder">
                                                <i class="fas fa-book"></i>
                                                @novel.Title
                                            </div>
                                        }
                                    </div>
                                    <div class="novel-card__content">
                                        <h3 class="novel-card__title">@novel.Title</h3>
                                        <div class="novel-card__rating">
                                            <i class="fas fa-star novel-card__star-icon"></i>
                                            <span class="novel-card__rating-value">@novel.AverageRating.ToString("F1")</span>
                                        </div>
                                        <div class="novel-card__footer">
                                            <span class="novel-card__genre-tag">
                                                @(novel.Genres != null && novel.Genres.Any() ? novel.Genres.First().Name : "Unknown")
                                            </span>
                                            <span class="novel-card__chapter-count">Ch. @novel.TotalChapters</span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        }

                        @* Fill remaining slots with empty placeholders *@
                        for (int i = weeklyFeaturedNovels.Count; i < 6; i++)
                        {
                            <div class="novel-card novel-card--empty">
                                <div class="novel-card__image-container">
                                    <div class="novel-card__empty-content">
                                        <i class="fas fa-calendar-week novel-card__empty-icon"></i>
                                        <h3 class="novel-card__empty-title">Slot @(i + 1)</h3>
                                        <p class="novel-card__empty-text">Available</p>
                                    </div>
                                </div>
                                <div class="novel-card__content">
                                    <h3 class="novel-card__title">Waiting for featured novel</h3>
                                    <div class="novel-card__rating">
                                        <i class="fas fa-star novel-card__star-icon"></i>
                                        <span class="novel-card__rating-value">0.0</span>
                                    </div>
                                    <div class="novel-card__footer">
                                        <span class="novel-card__genre-tag">-</span>
                                        <span class="novel-card__chapter-count">Ch. 0</span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        @* Display all empty slots when no novels exist *@
                        for (int i = 0; i < 6; i++)
                        {
                            <div class="novel-card novel-card--empty">
                                <div class="novel-card__image-container">
                                    <div class="novel-card__empty-content">
                                        <i class="fas fa-calendar-week novel-card__empty-icon"></i>
                                        <h3 class="novel-card__empty-title">Slot @(i + 1)</h3>
                                        <p class="novel-card__empty-text">Available</p>
                                    </div>
                                </div>
                                <div class="novel-card__content">
                                    <h3 class="novel-card__title">Waiting for featured novel</h3>
                                    <div class="novel-card__rating">
                                        <i class="fas fa-star novel-card__star-icon"></i>
                                        <span class="novel-card__rating-value">0.0</span>
                                    </div>
                                    <div class="novel-card__footer">
                                        <span class="novel-card__genre-tag">-</span>
                                        <span class="novel-card__chapter-count">Ch. 0</span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </section>

        <!-- Newly Releases Section -->
        <section class="section mb-12">
            <div class="nvs-slider-container">
                <div class="nvs-section-header">
                    <h2 class="nvs-section-title">
                        <i class="fas fa-fire nvs-section-icon"></i>
                        New Releases
                    </h2>
                </div>

                <div class="nvs-slider-wrapper">
                    <div class="nvs-slider-track" id="nvsSliderTrack">
                        @if (newlyReleasedNovels != null && newlyReleasedNovels.Any())
                        {
                            foreach (var novel in newlyReleasedNovels)
                            {
                                <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="novel-card__link">
                                    <!-- Novel Card -->
                                    <div class="nvs-novel-card">
                                        <div class="nvs-card-image-container">
                                            @if (novel.HasCoverImage)
                                            {
                                                <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                     alt="@novel.Title" class="nvs-card-image" />
                                            }
                                            else
                                            {
                                                <div class="nvs-image-placeholder">
                                                    <i class="fas fa-book"></i>
                                                    @(novel.Title.Length > 19 ? novel.Title.Substring(0, 19) + "..." : novel.Title)
                                                </div>
                                            }
                                            <div class="nvs-status-badge">@novel.Status</div>
                                            <div class="nvs-bookmark-count">
                                                <i class="fas fa-bookmark"></i>
                                                @{
                                                    string bookmarkDisplay = "";
                                                    if (novel.BookmarkCount >= 1000000)
                                                    {
                                                        bookmarkDisplay = (novel.BookmarkCount / 1000000.0).ToString("F1") + "M";
                                                    }
                                                    else if (novel.BookmarkCount >= 1000)
                                                    {
                                                        bookmarkDisplay = (novel.BookmarkCount / 1000.0).ToString("F0") + "K";
                                                    }
                                                    else
                                                    {
                                                        bookmarkDisplay = novel.BookmarkCount.ToString();
                                                    }
                                                }
                                                @bookmarkDisplay
                                            </div>
                                        </div>
                                        <div class="nvs-card-content">
                                            <div class="nvs-card-title">
                                                <div href="@Url.Action("Details", "Novel", new { id = novel.Id })">
                                                    @novel.Title
                                                    @*@(novel.Title.Length > 19 ? novel.Title.Substring(0, 17) + "..." : novel.Title)*@
                                                </div>
                                            </div>
                                            <div class="nvs-card-rating">
                                                <i class="fas fa-star nvs-star-icon"></i>
                                                <span class="nvs-rating-value">@novel.AverageRating.ToString("F1")</span>
                                            </div>
                                            <div class="nvs-card-footer">
                                                <span class="nvs-genre-tag">
                                                    @(novel.Genres != null && novel.Genres.Any() ? novel.Genres.First().Name : "Unknown")
                                                </span>
                                                <span class="nvs-chapter-count">Ch. @novel.TotalChapters</span>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        }
                        else
                        {
                            <div class="nvs-no-novels-message">
                                <p>No new releases available at the moment.</p>
                            </div>
                        }
                    </div>
                </div>

                <div class="nvs-nav-controls">
                    <button class="nvs-nav-button" id="nvsPrevBtn">
                        <i class="fas fa-chevron-left"></i>
                    </button>

                    <div class="nvs-slider-dots" id="nvsSliderDots"></div>

                    <button class="nvs-nav-button" id="nvsNextBtn">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
        </section>

        <!-- Ranking Section -->
        <section class="section mb-12">
            <div class="ranking-header">
                <h2 class="ranking-title">
                    <i class="fas fa-trophy ranking-icon"></i>
                    Rankings
                </h2>
                <button class="more-button">
                    More
                </button>
            </div>

            <!-- Weekly Rankings Content -->
            <div id="weekly" class="tab-content active">
                <div class="ranking-content">
                    <!-- Most Popular (by views) -->
                    <div class="ranking-list">
                        <h3 class="ranking-list-title">
                            <i class="fas fa-fire ranking-list-icon"></i>
                            Most Popular
                        </h3>

                        @{
                            var mostPopularNovels = allNovels.OrderByDescending(n => n.ViewCount).Take(8).ToList();
                            int popularRank = 1;
                        }

                        @foreach (var novel in mostPopularNovels)
                        {
                            <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="ranking-item-link">
                                <div class="ranking-item">
                                    <span class="ranking-number @(popularRank <= 3 ? "top-3" : "")">@popularRank</span>
                                    <div class="novel-cover">
                                        @if (novel.HasCoverImage)
                                        {
                                            <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                 alt="@novel.Title"
                                                 style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" />
                                        }
                                        else
                                        {
                                            <i class="fas fa-book"></i>
                                        }
                                    </div>
                                    <div class="ranking-novel-info">
                                        <div class="ranking-novel-title">@novel.Title</div>
                                        <div class="ranking-novel-stats">
                                            <span class="ranking-stat"><i class="fas fa-eye"></i> @(novel.ViewCount >= 1000000 ? (novel.ViewCount / 1000000.0).ToString("0.0") + "M" : (novel.ViewCount >= 1000 ? (novel.ViewCount / 1000.0).ToString("0.0") + "K" : novel.ViewCount.ToString()))</span>
                                            <span class="ranking-stat"><i class="fas fa-star"></i> @novel.AverageRating.ToString("0.0")</span>
                                        </div>
                                    </div>
                                    <span class="ranking-change">-</span>
                                </div>
                            </a>
                            popularRank++;
                        }
                    </div>

                    <!-- Highest Rated -->
                    <div class="ranking-list">
                        <h3 class="ranking-list-title">
                            <i class="fas fa-star ranking-list-icon"></i>
                            Highest Rated
                        </h3>

                        @{
                            var highestRatedNovels = allNovels.Where(n => n.TotalRatings > 0).OrderByDescending(n => n.AverageRating).Take(8).ToList();
                            int ratedRank = 1;
                        }

                        @foreach (var novel in highestRatedNovels)
                        {
                            <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="ranking-item-link">
                                <div class="ranking-item">
                                    <span class="ranking-number @(ratedRank <= 3 ? "top-3" : "")">@ratedRank</span>
                                    <div class="novel-cover">
                                        @if (novel.HasCoverImage)
                                        {
                                            <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                 alt="@novel.Title"
                                                 style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" />
                                        }
                                        else
                                        {
                                            <i class="fas fa-eye"></i>
                                        }
                                    </div>
                                    <div class="ranking-novel-info">
                                        <div class="ranking-novel-title">@novel.Title</div>
                                        <div class="ranking-novel-stats">
                                            <span class="ranking-stat"><i class="fas fa-star"></i> @novel.AverageRating.ToString("0.00")</span>
                                            <span class="ranking-stat"><i class="fas fa-book"></i> @novel.TotalChapters Ch</span>
                                        </div>
                                    </div>
                                    <span class="ranking-change">-</span>
                                </div>
                            </a>
                            ratedRank++;
                        }
                    </div>

                    <!-- Most Bookmarked -->
                    <div class="ranking-list">
                        <h3 class="ranking-list-title">
                            <i class="fas fa-bookmark ranking-list-icon"></i>
                            Most Bookmarked
                        </h3>

                        @{
                            var mostBookmarkedNovels = allNovels.OrderByDescending(n => n.BookmarkCount).Take(8).ToList();
                            int bookmarkRank = 1;
                        }

                        @foreach (var novel in mostBookmarkedNovels)
                        {
                            <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="ranking-item-link">
                                <div class="ranking-item">
                                    <span class="ranking-number @(bookmarkRank <= 3 ? "top-3" : "")">@bookmarkRank</span>
                                    <div class="novel-cover">
                                        @if (novel.HasCoverImage)
                                        {
                                            <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                 alt="@novel.Title"
                                                 style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" />
                                        }
                                        else
                                        {
                                            <i class="fas fa-bookmark"></i>
                                        }
                                    </div>
                                    <div class="ranking-novel-info">
                                        <div class="ranking-novel-title">@novel.Title</div>
                                        <div class="ranking-novel-stats">
                                            <span class="ranking-stat"><i class="fas fa-bookmark"></i> @(novel.BookmarkCount >= 1000000 ? (novel.BookmarkCount / 1000000.0).ToString("0.0") + "M" : (novel.BookmarkCount >= 1000 ? (novel.BookmarkCount / 1000.0).ToString("0.0") + "K" : novel.BookmarkCount.ToString()))</span>
                                            <span class="ranking-stat"><i class="fas fa-book"></i> @novel.TotalChapters Ch</span>
                                        </div>
                                    </div>
                                    <span class="ranking-change">-</span>
                                </div>
                            </a>
                            bookmarkRank++;
                        }

                    </div>
                </div>
            </div>
        </section>

        <!-- Popular Genres Section -->
        <section class="section mb-12">
            <div class="popular-genres-container">
                <div class="genres-section-header">
                    <h1 class="genres-section-title">
                        <i class="fa-solid fa-tags genres-section-icon"></i>
                        Popular Genres
                    </h1>
                    <button class="more-button">
                        More
                    </button>
                </div>

                <div class="genre-navigation-tabs" id="genreNavigationTabs">
                    @if (popularGenres != null && popularGenres.Any())
                    {
                        foreach (var genre in popularGenres.Select((value, index) => new { value, index }))
                        {
                            <button class="genre-tab-button @(genre.index == 0 ? "active-genre" : "")"
                                    data-genre-id="@genre.value.Id">
                                @genre.value.Name
                            </button>
                        }
                    }
                    else
                    {
                        <div class="loading-spinner">No genres available</div>
                    }
                </div>
            </div>

            <div class="genres-slider-wrapper">
                <div class="genres-slider-track" id="genresSliderTrack">
                    @if (defaultGenreNovels != null && defaultGenreNovels.Any() && defaultGenre != null)
                    {
                        foreach (var novel in defaultGenreNovels)
                        {
                            <a href="@Url.Action("BookDetail", "Book", new { id = novel.Id })" class="genres-novel-card-link">
                                <div class="genres-novel-card" data-genre="@defaultGenre.Name.ToLower()">
                                    <div class="genres-card-image-container">
                                        @if (novel.HasCoverImage)
                                        {
                                            <div class="genres-card-image">
                                                <img src="@Url.Action("GetCoverImage", "Home", new { id = novel.Id })"
                                                     alt="@novel.Title"
                                                     style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" />
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="genres-card-image" style="background: linear-gradient(145deg, #2a2a2a, #3a3a3a); display: flex; align-items: center; justify-content: center; color: @(defaultGenre.ColorCode ?? "#77DD77"); font-size: 1.5rem;">
                                                <i class="fas fa-book"></i>
                                            </div>
                                        }
                                        <div class="genres-status-badge">@novel.Status</div>
                                        <div class="genres-bookmark-count">
                                            <i class="fas fa-bookmark"></i>
                                            @{
                                                string bookmarkDisplay = "";
                                                if (novel.BookmarkCount >= 1000000)
                                                {
                                                    bookmarkDisplay = (novel.BookmarkCount / 1000000.0).ToString("F1") + "M";
                                                }
                                                else if (novel.BookmarkCount >= 1000)
                                                {
                                                    bookmarkDisplay = (novel.BookmarkCount / 1000.0).ToString("F1") + "K";
                                                }
                                                else
                                                {
                                                    bookmarkDisplay = novel.BookmarkCount.ToString();
                                                }
                                            }
                                            @bookmarkDisplay
                                        </div>
                                    </div>
                                    <div class="genres-card-content">
                                        <h3 class="genres-card-title">
                                            @novel.Title
                                            @*@(novel.Title.Length > 19 ? novel.Title.Substring(0, 17) + "..." : novel.Title)*@
                                        </h3>
                                        <div class="genres-card-rating">
                                            <i class="fas fa-star genres-star-icon"></i>
                                            <span class="genres-rating-value">@novel.AverageRating.ToString("F1")</span>
                                        </div>
                                        <div class="genres-card-footer">
                                            <span class="genres-genre-tag">@defaultGenre.Name</span>
                                            <span class="genres-chapter-count">Ch. @novel.TotalChapters</span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <div class="loading-spinner">No novels available</div>
                    }
                </div>
            </div>

            <div class="genres-nav-controls">
                <button class="genres-nav-button" id="genresPrevBtn">
                    <i class="fas fa-chevron-left"></i>
                </button>

                <div class="genres-slider-dots" id="genresSliderDots"></div>

                <button class="genres-nav-button" id="genresNextBtn">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </section>

    </main>




    <script>
        // Global configuration for all sliders
        window.sliderConfig = {
            genreApiUrl: '/Home/GetNovelsByGenre',
            // Add any other global configurations here
        };

        // Prevent multiple initializations
        window.sliderInitialized = {
            novelSlider: false,
            nvsSlider: false,
            genreSlider: false
        };
    </script>

    <!-- Load scripts in the correct order -->
    <!-- 1. First, load the unified slider manager -->
    @*<script src="~/Css_Script/Home/index_script/slider-manager.js"></script>*@
    <!-- 2. Then load all your slider classes -->
    <script src="~/Css_Script/Home/index_script/Index-HeroSlider.js"></script>
    <script src="~/Css_Script/Home/index_script/Index-NovelSlider.js"></script>
    <script src="~/Css_Script/Home/index_script/Index_PopularGenre_Slider.js"></script>

</body>
</html>