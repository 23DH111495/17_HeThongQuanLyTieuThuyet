@{
    Layout = "~/Areas/Admin/Views/Shared/_NovelAdminLayout.cshtml";
}
@model IEnumerable<WebNovel.Models.Novel>

<html>
<head>
    <title>Chapter Manager</title>
    <link href="~/Areas/Admin/CSS_SCRIPT/SideBar/Header.css" rel="stylesheet" />
    <link href="~/Areas/Admin/CSS_SCRIPT/Recycle/Recycle-control-panel.css" rel="stylesheet" />

    <link href="~/Areas/Admin/CSS_SCRIPT/Chapter/Chapter_Manager.css" rel="stylesheet" />
    <link href="~/Areas/Admin/CSS_SCRIPT/Novel/Novel.css" rel="stylesheet" />
</head>
<body>
    <div class="top-bar">
        <div class="">
            <h1 class="page-title" id="pageTitle">Chapter Manager</h1>
            <p style="margin-left: 220px;">Manage novels chapter with full CRUD operations and moderation</p>
        </div>
        <div class="user-info">
            <span>Welcome, Admin</span>
            <div class="user-avatar">A</div>
        </div>
    </div>

    <div class="chapter-container">

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-error">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="recycle-controls-section">
            <div class="recycle-controls-header">
                <h3 class="recycle-controls-title">
                    <i class="fas fa-filter"></i>
                    Search & Filters
                </h3>
                <div class="recycle-controls-stats">
                    <i class="fas fa-database"></i> @ViewBag.TotalCount novels total
                </div>
            </div>

            @using (Html.BeginForm("Chapter_Manager", "Chapter_Manager", FormMethod.Get, new { id = "filterForm" }))
            {
                <div class="recycle-controls-body">
                    <div class="recycle-controls-row">
                        <div class="recycle-control-group">
                            <label class="recycle-control-label">Search Query</label>
                            <input type="text" name="search" class="recycle-search-box"
                                   placeholder="Search by title, author, or keyword..."
                                   value="@ViewBag.Search">
                            <div id="suggestionsBox" class="suggestions-box"></div>


                        </div>

                        <div class="recycle-control-group">
                            <label class="recycle-control-label">Sort By</label>
                            <select name="sortBy" class="recycle-filter-select">
                                <option value="created" @(ViewBag.SortBy == "created" ? "selected" : "")>Date Created</option>
                                <option value="id" @(ViewBag.SortBy == "id" ? "selected" : "")>ID</option>
                                <option value="title" @(ViewBag.SortBy == "title" ? "selected" : "")>Title</option>
                                <option value="author" @(ViewBag.SortBy == "author" ? "selected" : "")>Author</option>
                                <option value="status" @(ViewBag.SortBy == "status" ? "selected" : "")>Status</option>
                                <option value="chapters" @(ViewBag.SortBy == "chapters" ? "selected" : "")>Chapter Count</option>
                            </select>
                        </div>

                        <div class="recycle-control-group">
                            <label class="recycle-control-label">Sort Direction</label>
                            <select name="sortDirection" class="recycle-filter-select">
                                <option value="desc" @(ViewBag.SortDirection == "desc" ? "selected" : "")>Descending</option>
                                <option value="asc" @(ViewBag.SortDirection == "asc" ? "selected" : "")>Ascending</option>
                            </select>
                        </div>

                        <div class="recycle-action-buttons">
                            <button type="submit" class="recycle-btn-primary">
                                <i class="fas fa-search"></i> Apply Filters
                            </button>
                            <a href="@Url.Action("Chapter_Manager", "Chapter_Manager")" class="recycle-btn-secondary">
                                <i class="fas fa-times"></i> Clear
                            </a>
                        </div>
                    </div>

                    <div class="recycle-controls-row">
                        <div class="recycle-control-group">
                            <label class="recycle-control-label">Status</label>
                            <select name="statusFilter" class="recycle-filter-select">
                                <option value="all" @(ViewBag.StatusFilter == "all" ? "selected" : "")>All Status</option>
                                <option value="ongoing" @(ViewBag.StatusFilter == "ongoing" ? "selected" : "")>Ongoing</option>
                                <option value="completed" @(ViewBag.StatusFilter == "completed" ? "selected" : "")>Completed</option>
                                <option value="hiatus" @(ViewBag.StatusFilter == "hiatus" ? "selected" : "")>Hiatus</option>
                                <option value="dropped" @(ViewBag.StatusFilter == "dropped" ? "selected" : "")>Dropped</option>
                            </select>
                        </div>

                        <div class="recycle-control-group">
                            <label class="recycle-control-label">Activity</label>
                            <select name="activeFilter" class="recycle-filter-select">
                                <option value="all" @(ViewBag.ActiveFilter == "all" ? "selected" : "")>All Novels</option>
                                <option value="active" @(ViewBag.ActiveFilter == "active" ? "selected" : "")>Active Only</option>
                                <option value="inactive" @(ViewBag.ActiveFilter == "inactive" ? "selected" : "")>Inactive Only</option>
                            </select>
                        </div>
                    </div>
                </div>
                <input type="hidden" name="page" value="1">
            }

            @if (ViewBag.HasActiveFilters == true)
            {
                <div class="recycle-filter-results-info">
                    <i class="fas fa-info-circle"></i>
                    <span>Showing filtered results: @ViewBag.FilteredCount novels found</span>
                    @if (!string.IsNullOrEmpty(ViewBag.Search?.ToString()))
                    {
                        <span> - Search: "<strong>@ViewBag.Search</strong>"</span>
                    }
                    @if (ViewBag.StatusFilter?.ToString() != "all")
                    {
                        <span> - Status: <strong>@ViewBag.StatusFilter</strong></span>
                    }
                    @if (ViewBag.ActiveFilter?.ToString() != "all")
                    {
                        <span> - Activity: <strong>@ViewBag.ActiveFilter</strong></span>
                    }
                </div>
            }
        </div>

        <div class="novels-table-wrapper">
            @if (Model.Any())
            {
                <table class="novels-table" id="novelsTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Cover</th>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Status</th>
                            <th>Chapter</th>
                            <th>Updated</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var novel in Model)
                        {
                            <tr data-novel-id="@novel.Id" class="novel-row @(novel.IsActive ? "active" : "inactive")">
                                <td class="novel-id">  <strong>#@novel.Id</strong> </td>

                                <td class="novel-cover">
                                    <div class="novels-cover-container">
                                        @if (novel.HasCoverImage)
                                        {
                                            <a href="@Url.Action("Novel_Details", "NovelDetails_Manager", new { area = "Admin", id = novel.Id, returnUrl = Request.RawUrl })">
                                                <!-- Use the new action to serve the image from database -->
                                                <img src="@Url.Action("GetCoverImage", "Novel_Manager", new { id = novel.Id })"
                                                     alt="@novel.Title Cover"
                                                     class="novels-cover-image"
                                                     onerror="this.src='/Content/images/no-cover-placeholder.jpg';" />
                                            </a>
                                        }
                                        else
                                        {
                                            <img src="/Content/images/no-cover-placeholder.jpg"
                                                 alt="No Cover Available"
                                                 class="cover-image" />
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="novels-title-info">
                                        <strong class="novel-official-title">@novel.Title</strong>
                                        @if (!string.IsNullOrEmpty(novel.AlternativeTitle))
                                        {
                                            <div class="novels-alt-title">@novel.AlternativeTitle</div>
                                        }
                                        <div class="novel-badges">
                                            @if (novel.IsWeeklyFeatured)
                                            {
                                                <span class="novels-feature-badge novels-weekly" title="Weekly Featured"><i class="fas fa-calendar-week"></i></span>
                                            }
                                            @if (novel.IsSliderFeatured)
                                            {
                                                <span class="novels-feature-badge novels-slider" title="Slider Featured"><i class="fas fa-images"></i></span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>@(novel.Author?.PenName ?? "Unknown")</td>
                                <td>
                                    <div class="novels-status-buttons">
                                        <span class="novels-status-badge novels-status-@novel.Status.ToLower()">
                                            @novel.Status
                                        </span>
                                        <span class="status-badge status-@(novel.IsActive ? "Active" : "Inactive")">
                                            @(novel.IsActive ? "Active" : "Inactive")
                                        </span>
                                        <span class="novels-moderation-badge novels-moderation-@novel.ModerationStatus.ToLower()">
                                            @novel.ModerationStatus
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <span class="">
                                        @novel.TotalChapters chapters
                                    </span>
                                </td>
                                <td class="novel-created">
                                    <span class="created-date" title="Created: @novel.CreatedAt.ToString("MMMM dd, yyyy HH:mm")">
                                        @(novel.LastUpdated.ToString("MM/dd/yyyy") ?? "N/A")
                                    </span>
                                </td>
                                <td class="novel-actions">
                                    @* Action Button section *@
                                    @Html.ActionLink("Add Chapter", "CreateChapter", new { novelId = novel.Id }, new { @class = "btn btn-add-action" })
                                    @Html.ActionLink("Details", "DetailChapter", new { novelId = novel.Id }, new { @class = "btn btn-chapter-action" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="novels-empty-state">
                    <i class="fas fa-book-open" style="font-size: 48px; color: #666; margin-bottom: 15px;"></i>
                    <h3>No Novels Found</h3>
                    <p>No novels match your current search criteria.</p>
                    <button id="addFirstNovelBtn" class="novels-btn-primary">Add Your First Novel</button>
                </div>
            }
        </div>

        @if (ViewBag.TotalPages > 1)
        {
            <div class="novels-pagination-container">
                <div>
                    Showing @(((ViewBag.CurrentPage ?? 1) - 1) * (ViewBag.PageSize ?? 10) + 1) to @Math.Min((ViewBag.CurrentPage ?? 1) * (ViewBag.PageSize ?? 10), (ViewBag.TotalCount ?? 0)) of @(ViewBag.TotalCount ?? 0) novels
                </div>
                <div class="novels-pagination">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a href="@Url.Action("Chapter_Manager", new { search = ViewBag.Search, statusFilter = ViewBag.StatusFilter, moderationFilter = ViewBag.ModerationFilter, activeFilter = ViewBag.ActiveFilter, page = ViewBag.CurrentPage - 1 })">&laquo; Prev</a>
                    }

                    @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                    {
                        if (i == ViewBag.CurrentPage)
                        {
                            <span class="current">@i</span>
                        }
                        else
                        {
                            <a href="@Url.Action("Chapter_Manager", new { search = ViewBag.Search, statusFilter = ViewBag.StatusFilter, moderationFilter = ViewBag.ModerationFilter, activeFilter = ViewBag.ActiveFilter, page = i })">@i</a>
                        }
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a href="@Url.Action("Chapter_Manager", new { search = ViewBag.Search, statusFilter = ViewBag.StatusFilter, moderationFilter = ViewBag.ModerationFilter, activeFilter = ViewBag.ActiveFilter, page = ViewBag.CurrentPage + 1 })">Next &raquo;</a>
                    }
                </div>
            </div>
        }
    </div>

</body>
</html>

<style>
    .suggestions-box {
        position: absolute;
        background: #151515;
        color: white;
        border: 1px solid #333;
        border-radius: 4px;
        z-index: 1000;
        width: 300px; /* điều chỉnh phù hợp ô search */
        display: none;
        max-height: 200px;
        overflow-y: auto;
    }

        .suggestions-box div {
            padding: 6px 10px;
            cursor: pointer;
        }

            .suggestions-box div:hover {
                background-color: #333;
            }

    #suggestionBox::-webkit-scrollbar {
        width: 8px; /* độ rộng thanh cuộn */
    }

    #suggestionBox::-webkit-scrollbar-track {
        background: #151515; /* nền track */
        border-radius: 4px;
    }

    #suggestionBox::-webkit-scrollbar-thumb {
        background-color: #444; /* màu thanh cuộn */
        border-radius: 4px;
        border: 2px solid #151515; /* tạo khoảng cách xung quanh thumb */
    }

        #suggestionBox::-webkit-scrollbar-thumb:hover {
            background-color: #666; /* khi hover */
        }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
$(document).ready(function () {
    const $searchInput = $('input[name="search"]');
    const $suggestionsBox = $('#suggestionsBox');

    $searchInput.on('input', function () {
        const term = $(this).val().trim();
        if (term.length < 1) {
            $suggestionsBox.hide();
            return;
        }

        $.getJSON('@Url.Action("GetNovelSuggestions", "Chapter_Manager", new { area = "Admin" })', { term: term })
            .done(function (data) {
                if (!data || data.length === 0) {
                    $suggestionsBox.hide();
                    return;
                }

                let html = '';
                data.forEach(item => {
                    html += `<div class="suggestion-item">${item}</div>`;
                });
                $suggestionsBox.html(html);

                // Vị trí hiển thị gợi ý theo input
                const offset = $searchInput.offset();
                const height = $searchInput.outerHeight();
                $suggestionsBox.css({
                    top: offset.top + height + 2,
                    left: offset.left,
                    width: $searchInput.outerWidth()
                }).show();
            });
    });

    // Click vào gợi ý
    $(document).on('click', '.suggestion-item', function () {
        $searchInput.val($(this).text());
        $suggestionsBox.hide();
    });

    // Ẩn khi click ra ngoài
    $(document).on('click', function (e) {
        if (!$(e.target).closest('input[name="search"], #suggestionsBox').length) {
            $suggestionsBox.hide();
        }
    });
});
</script>
