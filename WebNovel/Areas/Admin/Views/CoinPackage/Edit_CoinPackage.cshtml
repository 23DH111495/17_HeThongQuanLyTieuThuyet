@model WebNovel.Models.CoinPackage
@{
    Layout = "~/Areas/Admin/Views/Shared/_NovelAdminLayout.cshtml";
}


<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Package Management - WebNovel Admin</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="~/Areas/Admin/CSS_SCRIPT/CoinPackage/CP_CRUD.css" rel="stylesheet" />
    <link href="~/Areas/Admin/CSS_SCRIPT/SideBar/Header.css" rel="stylesheet" />

</head>
<body>
    <div class="top-bar">
        <div class="">
            <h1 class="page-title" id="pageTitle">
                <i class="fas fa-edit"></i>
                Edit Package
            </h1>
            <p style="margin-left: 220px;">Manage Coinpackage with full CRUD operations and moderation</p>
        </div>
        <div class="user-info">
            <span>Welcome, Admin</span>
            <div class="user-avatar">A</div>
        </div>
    </div>


    <div class="main-content">
        <div class="package-container">
            <div class="package-header">
                <h3 class="package-title">
                    <i class="fas fa-edit"></i>
                    Edit Package Details
                </h3>
                <span class="status-badge @(Model.IsActive ? "status-active" : "status-inactive")">
                    @(Model.IsActive ? "Active" : "Inactive")
                </span>
            </div>
            <div class="package-body">
                @using (Html.BeginForm("Edit_CoinPackage", "CoinPackage", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)

                    <div class="form-grid">
                        <div class="form-group">
                            <label class="form-label">Package Name</label>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-input", required = "required" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Price (USD)</label>
                            @Html.TextBoxFor(m => m.PriceUSD, new { @class = "form-input", type = "number", step = "0.01", required = "required" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Price (VND)</label>
                            @Html.TextBoxFor(m => m.PriceVND, new { @class = "form-input", type = "number" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Base Coins</label>
                            @Html.TextBoxFor(m => m.CoinAmount, new { @class = "form-input", type = "number", required = "required" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Bonus Coins</label>
                            @Html.TextBoxFor(m => m.BonusCoins, new { @class = "form-input", type = "number" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Status</label>
                            @Html.DropDownListFor(m => m.IsActive, new SelectList(new[] {
                                new { Value = true, Text = "Active" },
                                new { Value = false, Text = "Inactive" }
                            }, "Value", "Text"), new { @class = "form-select" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Sort Order</label>
                            @Html.TextBoxFor(m => m.SortOrder, new { @class = "form-input", type = "number", min = "1" })
                        </div>
                        <div class="form-group">
                            <label class="form-label">Featured</label>
                            <div style="display: flex; align-items: center; height: 40px;">
                                @Html.CheckBoxFor(m => m.IsFeatured, new { @class = "form-checkbox" })
                                <span style="margin-left: 8px;">Mark as featured package</span>
                            </div>
                        </div>
                    </div>

                    <div class="package-preview">
                        <div class="preview-header">
                            <div class="preview-title">@Model.Name</div>
                            <div class="preview-price">$@Model.PriceUSD</div>
                        </div>
                        <div class="preview-details">
                            @Model.CoinAmount coins
                            @if (Model.BonusCoins > 0)
                            {
                                <span> + @Model.BonusCoins bonus coins</span>
                            }
                        </div>
                        <div class="preview-features">
                            @if (Model.IsFeatured)
                            {
                                <span class="feature-tag">Featured</span>
                            }
                            <span class="feature-tag">Total: @Model.TotalCoins coins</span>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <a href="@Url.Action("Index_CoinPackage", "CoinPackage")" class="btn btn-secondary">
                            <i class="fas fa-times"></i>
                            Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i>
                            Save Changes
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>


</body>
</html>